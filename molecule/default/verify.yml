---
- name: Verify
  hosts: all
  gather_facts: false
  vars_files:
    - vars.yml
  collections:
    - middleware_automation.wildfly
  tasks:

    - name: "Ensures user {{ wildfly_user }} were created."
      user:
        name: "{{ wildfly_user }}"
        state: present
      register: wildfly_user_status
    - debug:
        var: wildfly_user_status
    - assert:
        that:
          - wildfly_user_status is defined
          - wildfly_user_status.changed is defined
          - not wildfly_user_status.changed
          - wildfly_user_status.failed is defined
          - not wildfly_user_status.failed
          - wildfly_user_status.state is defined
          - wildfly_user_status.state == 'present'
        quiet: true
        fail_msg: "User {{ wildfly_user }} was NOT created."

    - name: "Ensures user {{ wildfly_group }} were created."
      group:
        name: "{{ wildfly_user }}"
        state: present
      register: wildfly_group_status

    - assert:
        that:
          - wildfly_group_status is defined
          - wildfly_group_status.changed is defined
          - not wildfly_group_status.changed
          - wildfly_group_status.failed is defined
          - not wildfly_group_status.failed
          - wildfly_group_status.state is defined
          - wildfly_group_status.state == 'present'
        quiet: true
        fail_msg: "User {{ wildfly_group }} was NOT created."

    - set_fact:
        wfly_http_port: 8080

    - wait_for:
        port: "{{ wfly_http_port }}"

    - name: "Check if web connector is accessible"
      uri:
        url: "http://localhost:{{ wfly_http_port }}/"


    - set_fact:
        wfly_http_port: 8080

    - wait_for:
        port: "{{ wfly_http_port }}"

    - name: "Check if web connector is accessible"
      uri:
        url: "http://localhost:{{ wfly_http_port }}/"
        return_content: yes

    - name: "Populate service facts"
      ansible.builtin.service_facts:

    - name: "Check if service is running"
      assert:
        that:
          - ansible_facts is defined
          - ansible_facts.services is defined
          - ansible_facts.services['wildfly.service'] is defined
          - ansible_facts.services['wildfly.service']['state'] is defined
          - ansible_facts.services["wildfly.service"]['state'] == 'running'
    - include_tasks: verify_with_cli_queries.yml
      vars:
        validation_query: "{{ item }}"
        expected_result: "todo"
      loop:
        - '/core-service=server-environment:read-attribute(name=start-gracefully)'
        - '/subsystem=undertow/server=default-server/http-listener=default:read-attribute(name=enabled)'
